__extern_always_inline=extern
__attribute_copy__(%0)=
_ALIGNAS(%0)=alignas(%0)
__STRING(%0)="%0"
__attribute_alloc_size__(%0)=
_CRT_ALIGN(%0)=
__glibc_macro_warning(%0)=
__cpp_deduction_guides=0
_CRT_DEPRECATE_TEXT(%0)=
_LIBCPP_PREFERRED_NAME(%0)=
_CRT_INSECURE_DEPRECATE_MEMORY(%0)=
_CRT_STRINGIZE(%0)="%0"
_GLIBCXX_NOEXCEPT_IF(%0)=
_CRT_WIDE(%0)=L"%0"
WXUNUSED(%0)=%0
_GLIBCXX20_DEPRECATED(%0)=
_GLIBCXX_BEGIN_EXTERN_C=extern "C" {
_ATTRIBUTE(%0)=
_CRT_UNUSED(%0)=%0
wxDECLARE_EXPORTED_EVENT(%0,%1,%2)=int %1;
_GLIBCXX_BEGIN_NAMESPACE_TR1=namespace tr1{
__errordecl(%0,%1)=extern void %0 (void)
_GLIBCXX_BEGIN_NESTED_NAMESPACE(%0, %1)=namespace %0{
_GLIBCXX_END_EXTERN_C=}
_GLIBCXX_END_NAMESPACE=}
_GLIBCXX_END_NAMESPACE_TR1=}
__attribute_format_strfmon__(%0,%1)=
_VSTD=std
_GLIBCXX_PSEUDO_VISIBILITY(%0)=
_GLIBCXX_STD=std
_GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(%0)=
_LIBCPP_BEGIN_NAMESPACE_STD=namespace std{
_LIBCPP_CONCAT1(%0,%1)=%0%1
_GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(%0)=
_LIBCPP_CONCAT(%0,%1)=%0%1
_GLIBCXX_THROW(%0)=
_GLIBCXX_VISIBILITY(%0)=
__CRT_UUID_DECL(%0,%1,%2,%3,%4,%5,%6,%7,%8,%9,%10,%11)=
__MINGW_BROKEN_INTERFACE(%0)=
_LIBCPP_EXTERN_TEMPLATE(%0)=
__END_DECLS=}
_LIBCPP_DECLARE_STRONG_ENUM(%0)=enum class %0
__MINGW_ATTRIB_NONNULL(%0)=
__PSTL_ASSERT_MSG(%0,%1)=
__glibc_likely(%0)=(%0)
__attribute__(%0)=
_LIBCPP_DIAGNOSE_WARNING(%0)=
_GLIBCXX_BEGIN_NAMESPACE(%0)=namespace %0{
__MINGW_ATTRIB_DEPRECATED_MSG(%0)=
__BEGIN_DECLS=extern "C" {
_STD_END=}
__MINGW_PRAGMA_PARAM(%0)=
wxDECLARE_EVENT(%0,%1)=int %0;
wxWindow=wxWindowGTK
__CONCAT(%0,%1)=%0%1
static_assert(%0)=
_STD_BEGIN=namespace std{
wxStatusBar=wxStatusBarBase
_LIBCPP_FALLTHROUGH(%0)=
__CRT_STRINGIZE(%0)="%0"
wxTopLevelWindowNative=wxTopLevelWindowGTK
_CRT_INSECURE_DEPRECATE_GLOBALS(%0)=
_STRUCT_NAME(%0)=
_LIBCPP_FORMAT_PRINTF(%0,%1)=
__warndecl(%0,%1)=extern void %0 (void)
_LIBCPP_THREAD_SAFETY_ANNOTATION(%0)=
__attribute_deprecated_msg__(%0)=
__attribute_format_arg__(%0)=
__nonnull(%0)=
wxWindowNative=wxWindowBase
__PMT(%0)=%0
__glibcxx_assert_impl(%0)=
_LIBCPP_TOSTRING2(%0)="%0"
__NTHNL(%0)=%0
_GLIBCXX_DEPRECATED_SUGGEST(%0)=
__glibcxx_assert(%0)=
__glibc_unlikely(%0)=(%0)
__CRT_WIDE(%0)=L"%0"
__flexarr=[]
_ALIGNAS_TYPE(%0)=alignas(%0)
__const=const
__NTH(%0)=%0
_VSTD_FS=std::filesystem
_CRT_OBSOLETE(%0)=
__UNUSED_PARAM(%0)=%0
_Static_assert(%0,%1)=
wxDEPRECATED(%0)=%0
_LIBCPP_EXTERN_TEMPLATE_DEFINE(%0)=
_PSTL_ASSERT(%0)=
__N(%0)=%0
_LIBCPP_UNUSED_VAR(%0)=%0
_LIBCPP_TOSTRING(%0)="%0"
_NOEXCEPT_(%0)=
_LIBCPP_DIAGNOSE_ERROR(%0)=
__warnattr(%0)=
_GLIBCXX_THROW_OR_ABORT(%0)=
_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(%0)=
_LIBCPP_END_NAMESPACE_STD=}
__extern_inline=extern
_GLIBCXX_END_NESTED_NAMESPACE=}
__P(%0)=%0
_UNION_NAME(%0)=
_LIBCPP_END_NAMESPACE_FILESYSTEM=} }
_LIBCPP_DECLARE_STRONG_ENUM_EPILOG(%0)=
SCI_SCOPE(%0)=%0
__glibc_macro_warning1(%0)=
_LIBCPP_BEGIN_NAMESPACE_FILESYSTEM=namespace std { namespace filesystem {
__MINGW_INTRIN_INLINE=extern
_PSTL_ASSERT_MSG(%0,%1)=
__fortify_function=extern
END_DECLARE_EVENT_TYPES()=};
__PSTL_ASSERT(%0)=
DECLARE_EVENT_TYPE(%0,%1)=int %0;
BOOST_FOREACH(%0, %1)=%0;
BEGIN_DECLARE_EVENT_TYPES()=enum {
