<?xml version="1.0" encoding="UTF-8"?>
<BuildSettings Version="2.1">
  <Compilers>
    <Compiler Name="GCC" GenerateDependenciesFiles="yes" ReadObjectsListFromFile="yes" ObjectNameIdenticalToFileName="no" CompilerFamily="GCC" IsDefault="yes">
      <InstallationPath>
        <![CDATA[/usr/bin]]>
      </InstallationPath>
      <Switch Name="ArchiveOutput" Value=" "/>
      <Switch Name="Debug" Value="-g "/>
      <Switch Name="Include" Value="-I"/>
      <Switch Name="Library" Value="-l"/>
      <Switch Name="LibraryPath" Value="-L"/>
      <Switch Name="Object" Value="-o "/>
      <Switch Name="Output" Value="-o "/>
      <Switch Name="PreprocessOnly" Value="-E"/>
      <Switch Name="Preprocessor" Value="-D"/>
      <Switch Name="Source" Value="-c "/>
      <Tool Name="AR" Value="/usr/bin/ar rcu"/>
      <Tool Name="AS" Value="/usr/bin/as"/>
      <Tool Name="CC" Value="/usr/bin/gcc"/>
      <Tool Name="CXX" Value="/usr/bin/g++"/>
      <Tool Name="Debugger" Value="/usr/bin/gdb"/>
      <Tool Name="LinkerName" Value="/usr/bin/g++"/>
      <Tool Name="MAKE" Value="/usr/bin/make -j4"/>
      <Tool Name="ResourceCompiler" Value=""/>
      <Tool Name="SharedObjectLinkerName" Value="/usr/bin/g++ -shared -fPIC"/>
      <File Extension="c" CompilationLine="$(CC) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="c++" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cc" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cpp" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cxx" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="m" CompilationLine="$(CXX) -x objective-c $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="mm" CompilationLine="$(CXX) -x objective-c++ $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="rc" CompilationLine="$(RcCompilerName) -i &quot;$(FileFullPath)&quot; $(RcCmpOptions)   $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(RcIncludePath)" Kind="1"/>
      <File Extension="s" CompilationLine="$(AS) &quot;$(FileFullPath)&quot; $(ASFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) -I$(IncludePath)" Kind="0"/>
      <LinkLine ProjectType="Dynamic Library" Pattern="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Executable" Pattern="$(LinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(LinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Static Library" Pattern="$(AR) $(ArchiveOutputSwitch)$(OutputFile) $(Objects)" PatternWithFile="$(AR) $(ArchiveOutputSwitch)$(OutputFile) @$(ObjectsFileList)"/>
      <Option Name="ObjectSuffix" Value=".o"/>
      <Option Name="DependSuffix" Value=""/>
      <Option Name="PreprocessSuffix" Value=".i"/>
      <Pattern Name="Error" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]*)([:0-9]*)(: )((fatal error)|(error)|(undefined reference)|([\t ]*required from))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)(\(\.text\+[0-9a-fx]*\))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+)(:)</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">undefined reference to</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">\*\*\* \[[a-zA-Z\-_0-9 ]+\] (Error)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?[ \t]*(warning|required)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?( note)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?([ ]+instantiated)</Pattern>
      <Pattern Name="Warning" FileNameIndex="2" LineNumberIndex="4" ColumnIndex="-1">(In file included from *)([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?</Pattern>
      <GlobalIncludePath/>
      <GlobalLibPath/>
      <PathVariable/>
      <CompilerOption Name="-O">Optimize generated code. (for speed)</CompilerOption>
      <CompilerOption Name="-O0">Optimize for debugging</CompilerOption>
      <CompilerOption Name="-O1">Optimize more (for speed)</CompilerOption>
      <CompilerOption Name="-O2">Optimize even more (for speed)</CompilerOption>
      <CompilerOption Name="-O3">Optimize fully (for speed)</CompilerOption>
      <CompilerOption Name="-Os">Optimize generated code (for size)</CompilerOption>
      <CompilerOption Name="-W">Enable standard compiler warnings</CompilerOption>
      <CompilerOption Name="-Wall">Enable all compiler warnings</CompilerOption>
      <CompilerOption Name="-Wfatal-errors">Stop compiling after first error</CompilerOption>
      <CompilerOption Name="-Wmain">Warn if main() is not conformant</CompilerOption>
      <CompilerOption Name="-ansi">In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++</CompilerOption>
      <CompilerOption Name="-fexpensive-optimizations">Expensive optimizations</CompilerOption>
      <CompilerOption Name="-fopenmp">Enable OpenMP (compilation)</CompilerOption>
      <CompilerOption Name="-g">Produce debugging information</CompilerOption>
      <CompilerOption Name="-pedantic">Enable warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pedantic-errors">Treat as errors the warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pg">Profile code when executed</CompilerOption>
      <CompilerOption Name="-std=c++11">Enable C++11 features</CompilerOption>
      <CompilerOption Name="-std=c++14">Enable C++14 features</CompilerOption>
      <CompilerOption Name="-std=c++17">Enable C++17 features</CompilerOption>
      <CompilerOption Name="-std=c99">Enable ANSI C99 features</CompilerOption>
      <CompilerOption Name="-w">Inhibit all warning messages</CompilerOption>
      <LinkerOption Name="-fopenmp">Enable OpenMP (linkage)</LinkerOption>
      <LinkerOption Name="-mwindows">Prevent a useless terminal console appearing with MSWindows GUI programs</LinkerOption>
      <LinkerOption Name="-pg">Profile code when executed</LinkerOption>
      <LinkerOption Name="-s">Remove all symbol table and relocation information from the executable</LinkerOption>
    </Compiler>
    <Compiler Name="GCC-9" GenerateDependenciesFiles="yes" ReadObjectsListFromFile="yes" ObjectNameIdenticalToFileName="no" CompilerFamily="GCC" IsDefault="no">
      <InstallationPath>
        <![CDATA[/usr/bin]]>
      </InstallationPath>
      <Switch Name="ArchiveOutput" Value=" "/>
      <Switch Name="Debug" Value="-g "/>
      <Switch Name="Include" Value="-I"/>
      <Switch Name="Library" Value="-l"/>
      <Switch Name="LibraryPath" Value="-L"/>
      <Switch Name="Object" Value="-o "/>
      <Switch Name="Output" Value="-o "/>
      <Switch Name="PreprocessOnly" Value="-E"/>
      <Switch Name="Preprocessor" Value="-D"/>
      <Switch Name="Source" Value="-c "/>
      <Tool Name="AR" Value="/usr/bin/ar rcu"/>
      <Tool Name="AS" Value="/usr/bin/as"/>
      <Tool Name="CC" Value="/usr/bin/gcc-9"/>
      <Tool Name="CXX" Value="/usr/bin/g++-9"/>
      <Tool Name="Debugger" Value="/usr/bin/gdb"/>
      <Tool Name="LinkerName" Value="/usr/bin/g++-9"/>
      <Tool Name="MAKE" Value="/usr/bin/make -j4"/>
      <Tool Name="ResourceCompiler" Value=""/>
      <Tool Name="SharedObjectLinkerName" Value="/usr/bin/g++-9 -shared -fPIC"/>
      <File Extension="c" CompilationLine="$(CC) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="c++" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cc" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cpp" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cxx" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="m" CompilationLine="$(CXX) -x objective-c $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="mm" CompilationLine="$(CXX) -x objective-c++ $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="rc" CompilationLine="$(RcCompilerName) -i &quot;$(FileFullPath)&quot; $(RcCmpOptions)   $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(RcIncludePath)" Kind="1"/>
      <File Extension="s" CompilationLine="$(AS) &quot;$(FileFullPath)&quot; $(ASFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) -I$(IncludePath)" Kind="0"/>
      <LinkLine ProjectType="Dynamic Library" Pattern="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Executable" Pattern="$(LinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(LinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Static Library" Pattern="$(AR) $(ArchiveOutputSwitch)$(OutputFile) $(Objects)" PatternWithFile="$(AR) $(ArchiveOutputSwitch)$(OutputFile) @$(ObjectsFileList)"/>
      <Option Name="ObjectSuffix" Value=".o"/>
      <Option Name="DependSuffix" Value=""/>
      <Option Name="PreprocessSuffix" Value=".i"/>
      <Pattern Name="Error" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]*)([:0-9]*)(: )((fatal error)|(error)|(undefined reference)|([\t ]*required from))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)(\(\.text\+[0-9a-fx]*\))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+)(:)</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">undefined reference to</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">\*\*\* \[[a-zA-Z\-_0-9 ]+\] (Error)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?[ \t]*(warning|required)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?( note)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?([ ]+instantiated)</Pattern>
      <Pattern Name="Warning" FileNameIndex="2" LineNumberIndex="4" ColumnIndex="-1">(In file included from *)([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?</Pattern>
      <GlobalIncludePath/>
      <GlobalLibPath/>
      <PathVariable/>
      <CompilerOption Name="-O">Optimize generated code. (for speed)</CompilerOption>
      <CompilerOption Name="-O0">Optimize for debugging</CompilerOption>
      <CompilerOption Name="-O1">Optimize more (for speed)</CompilerOption>
      <CompilerOption Name="-O2">Optimize even more (for speed)</CompilerOption>
      <CompilerOption Name="-O3">Optimize fully (for speed)</CompilerOption>
      <CompilerOption Name="-Os">Optimize generated code (for size)</CompilerOption>
      <CompilerOption Name="-W">Enable standard compiler warnings</CompilerOption>
      <CompilerOption Name="-Wall">Enable all compiler warnings</CompilerOption>
      <CompilerOption Name="-Wfatal-errors">Stop compiling after first error</CompilerOption>
      <CompilerOption Name="-Wmain">Warn if main() is not conformant</CompilerOption>
      <CompilerOption Name="-ansi">In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++</CompilerOption>
      <CompilerOption Name="-fexpensive-optimizations">Expensive optimizations</CompilerOption>
      <CompilerOption Name="-fopenmp">Enable OpenMP (compilation)</CompilerOption>
      <CompilerOption Name="-g">Produce debugging information</CompilerOption>
      <CompilerOption Name="-pedantic">Enable warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pedantic-errors">Treat as errors the warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pg">Profile code when executed</CompilerOption>
      <CompilerOption Name="-std=c++11">Enable C++11 features</CompilerOption>
      <CompilerOption Name="-std=c++14">Enable C++14 features</CompilerOption>
      <CompilerOption Name="-std=c++17">Enable C++17 features</CompilerOption>
      <CompilerOption Name="-std=c99">Enable ANSI C99 features</CompilerOption>
      <CompilerOption Name="-w">Inhibit all warning messages</CompilerOption>
      <LinkerOption Name="-fopenmp">Enable OpenMP (linkage)</LinkerOption>
      <LinkerOption Name="-mwindows">Prevent a useless terminal console appearing with MSWindows GUI programs</LinkerOption>
      <LinkerOption Name="-pg">Profile code when executed</LinkerOption>
      <LinkerOption Name="-s">Remove all symbol table and relocation information from the executable</LinkerOption>
    </Compiler>
    <Compiler Name="GCC" GenerateDependenciesFiles="yes" ReadObjectsListFromFile="yes" ObjectNameIdenticalToFileName="no" CompilerFamily="GCC" IsDefault="no">
      <InstallationPath>
        <![CDATA[/usr/bin]]>
      </InstallationPath>
      <Switch Name="ArchiveOutput" Value=" "/>
      <Switch Name="Debug" Value="-g "/>
      <Switch Name="Include" Value="-I"/>
      <Switch Name="Library" Value="-l"/>
      <Switch Name="LibraryPath" Value="-L"/>
      <Switch Name="Object" Value="-o "/>
      <Switch Name="Output" Value="-o "/>
      <Switch Name="PreprocessOnly" Value="-E"/>
      <Switch Name="Preprocessor" Value="-D"/>
      <Switch Name="Source" Value="-c "/>
      <Tool Name="AR" Value="/usr/bin/ar rcu"/>
      <Tool Name="AS" Value="/usr/bin/as"/>
      <Tool Name="CC" Value="/usr/bin/gcc"/>
      <Tool Name="CXX" Value="/usr/bin/g++"/>
      <Tool Name="Debugger" Value="/usr/bin/gdb"/>
      <Tool Name="LinkerName" Value="/usr/bin/g++"/>
      <Tool Name="MAKE" Value="/usr/bin/make -j4"/>
      <Tool Name="ResourceCompiler" Value=""/>
      <Tool Name="SharedObjectLinkerName" Value="/usr/bin/g++ -shared -fPIC"/>
      <File Extension="c" CompilationLine="$(CC) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="c++" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cc" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cpp" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cxx" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="m" CompilationLine="$(CXX) -x objective-c $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="mm" CompilationLine="$(CXX) -x objective-c++ $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="rc" CompilationLine="$(RcCompilerName) -i &quot;$(FileFullPath)&quot; $(RcCmpOptions)   $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(RcIncludePath)" Kind="1"/>
      <File Extension="s" CompilationLine="$(AS) &quot;$(FileFullPath)&quot; $(ASFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) -I$(IncludePath)" Kind="0"/>
      <LinkLine ProjectType="Dynamic Library" Pattern="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Executable" Pattern="$(LinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(LinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Static Library" Pattern="$(AR) $(ArchiveOutputSwitch)$(OutputFile) $(Objects)" PatternWithFile="$(AR) $(ArchiveOutputSwitch)$(OutputFile) @$(ObjectsFileList)"/>
      <Option Name="ObjectSuffix" Value=".o"/>
      <Option Name="DependSuffix" Value=""/>
      <Option Name="PreprocessSuffix" Value=".i"/>
      <Pattern Name="Error" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]*)([:0-9]*)(: )((fatal error)|(error)|(undefined reference)|([\t ]*required from))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)(\(\.text\+[0-9a-fx]*\))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+)(:)</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">undefined reference to</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">\*\*\* \[[a-zA-Z\-_0-9 ]+\] (Error)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?[ \t]*(warning|required)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?( note)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?([ ]+instantiated)</Pattern>
      <Pattern Name="Warning" FileNameIndex="2" LineNumberIndex="4" ColumnIndex="-1">(In file included from *)([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?</Pattern>
      <GlobalIncludePath/>
      <GlobalLibPath/>
      <PathVariable/>
      <CompilerOption Name="-O">Optimize generated code. (for speed)</CompilerOption>
      <CompilerOption Name="-O0">Optimize for debugging</CompilerOption>
      <CompilerOption Name="-O1">Optimize more (for speed)</CompilerOption>
      <CompilerOption Name="-O2">Optimize even more (for speed)</CompilerOption>
      <CompilerOption Name="-O3">Optimize fully (for speed)</CompilerOption>
      <CompilerOption Name="-Os">Optimize generated code (for size)</CompilerOption>
      <CompilerOption Name="-W">Enable standard compiler warnings</CompilerOption>
      <CompilerOption Name="-Wall">Enable all compiler warnings</CompilerOption>
      <CompilerOption Name="-Wfatal-errors">Stop compiling after first error</CompilerOption>
      <CompilerOption Name="-Wmain">Warn if main() is not conformant</CompilerOption>
      <CompilerOption Name="-ansi">In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++</CompilerOption>
      <CompilerOption Name="-fexpensive-optimizations">Expensive optimizations</CompilerOption>
      <CompilerOption Name="-fopenmp">Enable OpenMP (compilation)</CompilerOption>
      <CompilerOption Name="-g">Produce debugging information</CompilerOption>
      <CompilerOption Name="-pedantic">Enable warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pedantic-errors">Treat as errors the warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pg">Profile code when executed</CompilerOption>
      <CompilerOption Name="-std=c++11">Enable C++11 features</CompilerOption>
      <CompilerOption Name="-std=c++14">Enable C++14 features</CompilerOption>
      <CompilerOption Name="-std=c++17">Enable C++17 features</CompilerOption>
      <CompilerOption Name="-std=c99">Enable ANSI C99 features</CompilerOption>
      <CompilerOption Name="-w">Inhibit all warning messages</CompilerOption>
      <LinkerOption Name="-fopenmp">Enable OpenMP (linkage)</LinkerOption>
      <LinkerOption Name="-mwindows">Prevent a useless terminal console appearing with MSWindows GUI programs</LinkerOption>
      <LinkerOption Name="-pg">Profile code when executed</LinkerOption>
      <LinkerOption Name="-s">Remove all symbol table and relocation information from the executable</LinkerOption>
    </Compiler>
    <Compiler Name="GCC-9" GenerateDependenciesFiles="yes" ReadObjectsListFromFile="yes" ObjectNameIdenticalToFileName="no" CompilerFamily="GCC" IsDefault="no">
      <InstallationPath>
        <![CDATA[/usr/bin]]>
      </InstallationPath>
      <Switch Name="ArchiveOutput" Value=" "/>
      <Switch Name="Debug" Value="-g "/>
      <Switch Name="Include" Value="-I"/>
      <Switch Name="Library" Value="-l"/>
      <Switch Name="LibraryPath" Value="-L"/>
      <Switch Name="Object" Value="-o "/>
      <Switch Name="Output" Value="-o "/>
      <Switch Name="PreprocessOnly" Value="-E"/>
      <Switch Name="Preprocessor" Value="-D"/>
      <Switch Name="Source" Value="-c "/>
      <Tool Name="AR" Value="/usr/bin/ar rcu"/>
      <Tool Name="AS" Value="/usr/bin/as"/>
      <Tool Name="CC" Value="/usr/bin/gcc-9"/>
      <Tool Name="CXX" Value="/usr/bin/g++-9"/>
      <Tool Name="Debugger" Value="/usr/bin/gdb"/>
      <Tool Name="LinkerName" Value="/usr/bin/g++-9"/>
      <Tool Name="MAKE" Value="/usr/bin/make -j4"/>
      <Tool Name="ResourceCompiler" Value=""/>
      <Tool Name="SharedObjectLinkerName" Value="/usr/bin/g++-9 -shared -fPIC"/>
      <File Extension="c" CompilationLine="$(CC) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="c++" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cc" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cpp" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cxx" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="m" CompilationLine="$(CXX) -x objective-c $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="mm" CompilationLine="$(CXX) -x objective-c++ $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="rc" CompilationLine="$(RcCompilerName) -i &quot;$(FileFullPath)&quot; $(RcCmpOptions)   $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(RcIncludePath)" Kind="1"/>
      <File Extension="s" CompilationLine="$(AS) &quot;$(FileFullPath)&quot; $(ASFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) -I$(IncludePath)" Kind="0"/>
      <LinkLine ProjectType="Dynamic Library" Pattern="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Executable" Pattern="$(LinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(LinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Static Library" Pattern="$(AR) $(ArchiveOutputSwitch)$(OutputFile) $(Objects)" PatternWithFile="$(AR) $(ArchiveOutputSwitch)$(OutputFile) @$(ObjectsFileList)"/>
      <Option Name="ObjectSuffix" Value=".o"/>
      <Option Name="DependSuffix" Value=""/>
      <Option Name="PreprocessSuffix" Value=".i"/>
      <Pattern Name="Error" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]*)([:0-9]*)(: )((fatal error)|(error)|(undefined reference)|([\t ]*required from))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)(\(\.text\+[0-9a-fx]*\))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+)(:)</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">undefined reference to</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">\*\*\* \[[a-zA-Z\-_0-9 ]+\] (Error)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?[ \t]*(warning|required)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?( note)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?([ ]+instantiated)</Pattern>
      <Pattern Name="Warning" FileNameIndex="2" LineNumberIndex="4" ColumnIndex="-1">(In file included from *)([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?</Pattern>
      <GlobalIncludePath/>
      <GlobalLibPath/>
      <PathVariable/>
      <CompilerOption Name="-O">Optimize generated code. (for speed)</CompilerOption>
      <CompilerOption Name="-O0">Optimize for debugging</CompilerOption>
      <CompilerOption Name="-O1">Optimize more (for speed)</CompilerOption>
      <CompilerOption Name="-O2">Optimize even more (for speed)</CompilerOption>
      <CompilerOption Name="-O3">Optimize fully (for speed)</CompilerOption>
      <CompilerOption Name="-Os">Optimize generated code (for size)</CompilerOption>
      <CompilerOption Name="-W">Enable standard compiler warnings</CompilerOption>
      <CompilerOption Name="-Wall">Enable all compiler warnings</CompilerOption>
      <CompilerOption Name="-Wfatal-errors">Stop compiling after first error</CompilerOption>
      <CompilerOption Name="-Wmain">Warn if main() is not conformant</CompilerOption>
      <CompilerOption Name="-ansi">In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++</CompilerOption>
      <CompilerOption Name="-fexpensive-optimizations">Expensive optimizations</CompilerOption>
      <CompilerOption Name="-fopenmp">Enable OpenMP (compilation)</CompilerOption>
      <CompilerOption Name="-g">Produce debugging information</CompilerOption>
      <CompilerOption Name="-pedantic">Enable warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pedantic-errors">Treat as errors the warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pg">Profile code when executed</CompilerOption>
      <CompilerOption Name="-std=c++11">Enable C++11 features</CompilerOption>
      <CompilerOption Name="-std=c++14">Enable C++14 features</CompilerOption>
      <CompilerOption Name="-std=c++17">Enable C++17 features</CompilerOption>
      <CompilerOption Name="-std=c99">Enable ANSI C99 features</CompilerOption>
      <CompilerOption Name="-w">Inhibit all warning messages</CompilerOption>
      <LinkerOption Name="-fopenmp">Enable OpenMP (linkage)</LinkerOption>
      <LinkerOption Name="-mwindows">Prevent a useless terminal console appearing with MSWindows GUI programs</LinkerOption>
      <LinkerOption Name="-pg">Profile code when executed</LinkerOption>
      <LinkerOption Name="-s">Remove all symbol table and relocation information from the executable</LinkerOption>
    </Compiler>
    <Compiler Name="CLANG-10" GenerateDependenciesFiles="yes" ReadObjectsListFromFile="yes" ObjectNameIdenticalToFileName="no" CompilerFamily="LLVM/Clang" IsDefault="yes">
      <InstallationPath>
        <![CDATA[/bin]]>
      </InstallationPath>
      <Switch Name="ArchiveOutput" Value=" "/>
      <Switch Name="Debug" Value="-g "/>
      <Switch Name="Include" Value="-I"/>
      <Switch Name="Library" Value="-l"/>
      <Switch Name="LibraryPath" Value="-L"/>
      <Switch Name="Object" Value="-o "/>
      <Switch Name="Output" Value="-o "/>
      <Switch Name="PreprocessOnly" Value="-E"/>
      <Switch Name="Preprocessor" Value="-D"/>
      <Switch Name="Source" Value="-c "/>
      <Tool Name="AR" Value="/bin/llvm-ar-10 rcu"/>
      <Tool Name="AS" Value="/bin/llvm-as-10"/>
      <Tool Name="CC" Value="/bin/clang-10"/>
      <Tool Name="CXX" Value="/bin/clang++-10"/>
      <Tool Name="LinkerName" Value="/bin/clang++-10"/>
      <Tool Name="MAKE" Value="make -j4"/>
      <Tool Name="ResourceCompiler" Value=""/>
      <Tool Name="SharedObjectLinkerName" Value="/bin/clang++-10 -shared -fPIC"/>
      <File Extension="c" CompilationLine="$(CC) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="c++" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cc" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cpp" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cxx" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="m" CompilationLine="$(CXX) -x objective-c $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="mm" CompilationLine="$(CXX) -x objective-c++ $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="rc" CompilationLine="$(RcCompilerName) -i &quot;$(FileFullPath)&quot; $(RcCmpOptions)   $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(RcIncludePath)" Kind="1"/>
      <File Extension="s" CompilationLine="$(AS) &quot;$(FileFullPath)&quot; $(ASFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) -I$(IncludePath)" Kind="0"/>
      <LinkLine ProjectType="Dynamic Library" Pattern="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Executable" Pattern="$(LinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(LinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Static Library" Pattern="$(AR) $(ArchiveOutputSwitch)$(OutputFile) $(Objects)" PatternWithFile="$(AR) $(ArchiveOutputSwitch)$(OutputFile) @$(ObjectsFileList)"/>
      <Option Name="ObjectSuffix" Value=".o"/>
      <Option Name="DependSuffix" Value=""/>
      <Option Name="PreprocessSuffix" Value=".i"/>
      <Pattern Name="Error" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]*)([:0-9]*)(: )((fatal error)|(error)|(undefined reference)|([\t ]*required from))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)(\(\.text\+[0-9a-fx]*\))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+)(:)</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">undefined reference to</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">\*\*\* \[[a-zA-Z\-_0-9 ]+\] (Error)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?[ \t]*(warning|required)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?( note)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?([ ]+instantiated)</Pattern>
      <Pattern Name="Warning" FileNameIndex="2" LineNumberIndex="4" ColumnIndex="-1">(In file included from *)([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?</Pattern>
      <GlobalIncludePath/>
      <GlobalLibPath/>
      <PathVariable/>
      <CompilerOption Name="-O">Optimize generated code. (for speed)</CompilerOption>
      <CompilerOption Name="-O0">Optimize for debugging</CompilerOption>
      <CompilerOption Name="-O1">Optimize more (for speed)</CompilerOption>
      <CompilerOption Name="-O2">Optimize even more (for speed)</CompilerOption>
      <CompilerOption Name="-O3">Optimize fully (for speed)</CompilerOption>
      <CompilerOption Name="-Os">Optimize generated code (for size)</CompilerOption>
      <CompilerOption Name="-W">Enable standard compiler warnings</CompilerOption>
      <CompilerOption Name="-Wall">Enable all compiler warnings</CompilerOption>
      <CompilerOption Name="-Wfatal-errors">Stop compiling after first error</CompilerOption>
      <CompilerOption Name="-Wmain">Warn if main() is not conformant</CompilerOption>
      <CompilerOption Name="-ansi">In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++</CompilerOption>
      <CompilerOption Name="-fexpensive-optimizations">Expensive optimizations</CompilerOption>
      <CompilerOption Name="-fopenmp">Enable OpenMP (compilation)</CompilerOption>
      <CompilerOption Name="-g">Produce debugging information</CompilerOption>
      <CompilerOption Name="-pedantic">Enable warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pedantic-errors">Treat as errors the warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pg">Profile code when executed</CompilerOption>
      <CompilerOption Name="-std=c++11">Enable C++11 features</CompilerOption>
      <CompilerOption Name="-std=c++14">Enable C++14 features</CompilerOption>
      <CompilerOption Name="-std=c++17">Enable C++17 features</CompilerOption>
      <CompilerOption Name="-std=c99">Enable ANSI C99 features</CompilerOption>
      <CompilerOption Name="-w">Inhibit all warning messages</CompilerOption>
      <LinkerOption Name="-fopenmp">Enable OpenMP (linkage)</LinkerOption>
      <LinkerOption Name="-mwindows">Prevent a useless terminal console appearing with MSWindows GUI programs</LinkerOption>
      <LinkerOption Name="-pg">Profile code when executed</LinkerOption>
      <LinkerOption Name="-s">Remove all symbol table and relocation information from the executable</LinkerOption>
    </Compiler>
    <Compiler Name="CLANG-10" GenerateDependenciesFiles="yes" ReadObjectsListFromFile="yes" ObjectNameIdenticalToFileName="no" CompilerFamily="LLVM/Clang" IsDefault="no">
      <InstallationPath>
        <![CDATA[/usr/bin]]>
      </InstallationPath>
      <Switch Name="ArchiveOutput" Value=" "/>
      <Switch Name="Debug" Value="-g "/>
      <Switch Name="Include" Value="-I"/>
      <Switch Name="Library" Value="-l"/>
      <Switch Name="LibraryPath" Value="-L"/>
      <Switch Name="Object" Value="-o "/>
      <Switch Name="Output" Value="-o "/>
      <Switch Name="PreprocessOnly" Value="-E"/>
      <Switch Name="Preprocessor" Value="-D"/>
      <Switch Name="Source" Value="-c "/>
      <Tool Name="AR" Value="/usr/bin/llvm-ar-10 rcu"/>
      <Tool Name="AS" Value="/usr/bin/llvm-as-10"/>
      <Tool Name="CC" Value="/usr/bin/clang-10"/>
      <Tool Name="CXX" Value="/usr/bin/clang++-10"/>
      <Tool Name="LinkerName" Value="/usr/bin/clang++-10"/>
      <Tool Name="MAKE" Value="make -j4"/>
      <Tool Name="ResourceCompiler" Value=""/>
      <Tool Name="SharedObjectLinkerName" Value="/usr/bin/clang++-10 -shared -fPIC"/>
      <File Extension="c" CompilationLine="$(CC) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="c++" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cc" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cpp" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cxx" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="m" CompilationLine="$(CXX) -x objective-c $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="mm" CompilationLine="$(CXX) -x objective-c++ $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="rc" CompilationLine="$(RcCompilerName) -i &quot;$(FileFullPath)&quot; $(RcCmpOptions)   $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(RcIncludePath)" Kind="1"/>
      <File Extension="s" CompilationLine="$(AS) &quot;$(FileFullPath)&quot; $(ASFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) -I$(IncludePath)" Kind="0"/>
      <LinkLine ProjectType="Dynamic Library" Pattern="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Executable" Pattern="$(LinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(LinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Static Library" Pattern="$(AR) $(ArchiveOutputSwitch)$(OutputFile) $(Objects)" PatternWithFile="$(AR) $(ArchiveOutputSwitch)$(OutputFile) @$(ObjectsFileList)"/>
      <Option Name="ObjectSuffix" Value=".o"/>
      <Option Name="DependSuffix" Value=""/>
      <Option Name="PreprocessSuffix" Value=".i"/>
      <Pattern Name="Error" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]*)([:0-9]*)(: )((fatal error)|(error)|(undefined reference)|([\t ]*required from))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)(\(\.text\+[0-9a-fx]*\))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+)(:)</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">undefined reference to</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">\*\*\* \[[a-zA-Z\-_0-9 ]+\] (Error)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?[ \t]*(warning|required)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?( note)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?([ ]+instantiated)</Pattern>
      <Pattern Name="Warning" FileNameIndex="2" LineNumberIndex="4" ColumnIndex="-1">(In file included from *)([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?</Pattern>
      <GlobalIncludePath/>
      <GlobalLibPath/>
      <PathVariable/>
      <CompilerOption Name="-O">Optimize generated code. (for speed)</CompilerOption>
      <CompilerOption Name="-O0">Optimize for debugging</CompilerOption>
      <CompilerOption Name="-O1">Optimize more (for speed)</CompilerOption>
      <CompilerOption Name="-O2">Optimize even more (for speed)</CompilerOption>
      <CompilerOption Name="-O3">Optimize fully (for speed)</CompilerOption>
      <CompilerOption Name="-Os">Optimize generated code (for size)</CompilerOption>
      <CompilerOption Name="-W">Enable standard compiler warnings</CompilerOption>
      <CompilerOption Name="-Wall">Enable all compiler warnings</CompilerOption>
      <CompilerOption Name="-Wfatal-errors">Stop compiling after first error</CompilerOption>
      <CompilerOption Name="-Wmain">Warn if main() is not conformant</CompilerOption>
      <CompilerOption Name="-ansi">In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++</CompilerOption>
      <CompilerOption Name="-fexpensive-optimizations">Expensive optimizations</CompilerOption>
      <CompilerOption Name="-fopenmp">Enable OpenMP (compilation)</CompilerOption>
      <CompilerOption Name="-g">Produce debugging information</CompilerOption>
      <CompilerOption Name="-pedantic">Enable warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pedantic-errors">Treat as errors the warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pg">Profile code when executed</CompilerOption>
      <CompilerOption Name="-std=c++11">Enable C++11 features</CompilerOption>
      <CompilerOption Name="-std=c++14">Enable C++14 features</CompilerOption>
      <CompilerOption Name="-std=c++17">Enable C++17 features</CompilerOption>
      <CompilerOption Name="-std=c99">Enable ANSI C99 features</CompilerOption>
      <CompilerOption Name="-w">Inhibit all warning messages</CompilerOption>
      <LinkerOption Name="-fopenmp">Enable OpenMP (linkage)</LinkerOption>
      <LinkerOption Name="-mwindows">Prevent a useless terminal console appearing with MSWindows GUI programs</LinkerOption>
      <LinkerOption Name="-pg">Profile code when executed</LinkerOption>
      <LinkerOption Name="-s">Remove all symbol table and relocation information from the executable</LinkerOption>
    </Compiler>
    <Compiler Name="Cross GCC ( x86_64-linux-gnu )" GenerateDependenciesFiles="yes" ReadObjectsListFromFile="yes" ObjectNameIdenticalToFileName="no" CompilerFamily="GCC" IsDefault="no">
      <InstallationPath>
        <![CDATA[/usr/bin]]>
      </InstallationPath>
      <Switch Name="ArchiveOutput" Value=" "/>
      <Switch Name="Debug" Value="-g "/>
      <Switch Name="Include" Value="-I"/>
      <Switch Name="Library" Value="-l"/>
      <Switch Name="LibraryPath" Value="-L"/>
      <Switch Name="Object" Value="-o "/>
      <Switch Name="Output" Value="-o "/>
      <Switch Name="PreprocessOnly" Value="-E"/>
      <Switch Name="Preprocessor" Value="-D"/>
      <Switch Name="Source" Value="-c "/>
      <Tool Name="AR" Value="/usr/bin/x86_64-linux-gnu-ar rcu"/>
      <Tool Name="AS" Value="/usr/bin/x86_64-linux-gnu-as"/>
      <Tool Name="CC" Value="/usr/bin/x86_64-linux-gnu-gcc"/>
      <Tool Name="CXX" Value="/usr/bin/x86_64-linux-gnu-g++"/>
      <Tool Name="Debugger" Value="/usr/bin/x86_64-linux-gnu-gdb"/>
      <Tool Name="LinkerName" Value="/usr/bin/x86_64-linux-gnu-g++"/>
      <Tool Name="MAKE" Value="/usr/bin/make -j4"/>
      <Tool Name="ResourceCompiler" Value="windres"/>
      <Tool Name="SharedObjectLinkerName" Value="/usr/bin/x86_64-linux-gnu-g++ -shared -fPIC"/>
      <File Extension="c" CompilationLine="$(CC) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="c++" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cc" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cpp" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cxx" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="m" CompilationLine="$(CXX) -x objective-c $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="mm" CompilationLine="$(CXX) -x objective-c++ $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="rc" CompilationLine="$(RcCompilerName) -i &quot;$(FileFullPath)&quot; $(RcCmpOptions)   $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(RcIncludePath)" Kind="1"/>
      <File Extension="s" CompilationLine="$(AS) &quot;$(FileFullPath)&quot; $(ASFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) -I$(IncludePath)" Kind="0"/>
      <LinkLine ProjectType="Dynamic Library" Pattern="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Executable" Pattern="$(LinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(LinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Static Library" Pattern="$(AR) $(ArchiveOutputSwitch)$(OutputFile) $(Objects)" PatternWithFile="$(AR) $(ArchiveOutputSwitch)$(OutputFile) @$(ObjectsFileList)"/>
      <Option Name="ObjectSuffix" Value=".o"/>
      <Option Name="DependSuffix" Value=""/>
      <Option Name="PreprocessSuffix" Value=".i"/>
      <Pattern Name="Error" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]*)([:0-9]*)(: )((fatal error)|(error)|(undefined reference)|([\t ]*required from))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)(\(\.text\+[0-9a-fx]*\))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+)(:)</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">undefined reference to</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">\*\*\* \[[a-zA-Z\-_0-9 ]+\] (Error)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?[ \t]*(warning|required)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?( note)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?([ ]+instantiated)</Pattern>
      <Pattern Name="Warning" FileNameIndex="2" LineNumberIndex="4" ColumnIndex="-1">(In file included from *)([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?</Pattern>
      <GlobalIncludePath/>
      <GlobalLibPath/>
      <PathVariable/>
      <CompilerOption Name="-O">Optimize generated code. (for speed)</CompilerOption>
      <CompilerOption Name="-O0">Optimize for debugging</CompilerOption>
      <CompilerOption Name="-O1">Optimize more (for speed)</CompilerOption>
      <CompilerOption Name="-O2">Optimize even more (for speed)</CompilerOption>
      <CompilerOption Name="-O3">Optimize fully (for speed)</CompilerOption>
      <CompilerOption Name="-Os">Optimize generated code (for size)</CompilerOption>
      <CompilerOption Name="-W">Enable standard compiler warnings</CompilerOption>
      <CompilerOption Name="-Wall">Enable all compiler warnings</CompilerOption>
      <CompilerOption Name="-Wfatal-errors">Stop compiling after first error</CompilerOption>
      <CompilerOption Name="-Wmain">Warn if main() is not conformant</CompilerOption>
      <CompilerOption Name="-ansi">In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++</CompilerOption>
      <CompilerOption Name="-fexpensive-optimizations">Expensive optimizations</CompilerOption>
      <CompilerOption Name="-fopenmp">Enable OpenMP (compilation)</CompilerOption>
      <CompilerOption Name="-g">Produce debugging information</CompilerOption>
      <CompilerOption Name="-pedantic">Enable warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pedantic-errors">Treat as errors the warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pg">Profile code when executed</CompilerOption>
      <CompilerOption Name="-std=c++11">Enable C++11 features</CompilerOption>
      <CompilerOption Name="-std=c++14">Enable C++14 features</CompilerOption>
      <CompilerOption Name="-std=c++17">Enable C++17 features</CompilerOption>
      <CompilerOption Name="-std=c99">Enable ANSI C99 features</CompilerOption>
      <CompilerOption Name="-w">Inhibit all warning messages</CompilerOption>
      <LinkerOption Name="-fopenmp">Enable OpenMP (linkage)</LinkerOption>
      <LinkerOption Name="-mwindows">Prevent a useless terminal console appearing with MSWindows GUI programs</LinkerOption>
      <LinkerOption Name="-pg">Profile code when executed</LinkerOption>
      <LinkerOption Name="-s">Remove all symbol table and relocation information from the executable</LinkerOption>
    </Compiler>
    <Compiler Name="Cross GCC ( x86_64-linux-gnu )" GenerateDependenciesFiles="yes" ReadObjectsListFromFile="yes" ObjectNameIdenticalToFileName="no" CompilerFamily="GCC" IsDefault="no">
      <InstallationPath>
        <![CDATA[/bin]]>
      </InstallationPath>
      <Switch Name="ArchiveOutput" Value=" "/>
      <Switch Name="Debug" Value="-g "/>
      <Switch Name="Include" Value="-I"/>
      <Switch Name="Library" Value="-l"/>
      <Switch Name="LibraryPath" Value="-L"/>
      <Switch Name="Object" Value="-o "/>
      <Switch Name="Output" Value="-o "/>
      <Switch Name="PreprocessOnly" Value="-E"/>
      <Switch Name="Preprocessor" Value="-D"/>
      <Switch Name="Source" Value="-c "/>
      <Tool Name="AR" Value="/bin/x86_64-linux-gnu-ar rcu"/>
      <Tool Name="AS" Value="/bin/x86_64-linux-gnu-as"/>
      <Tool Name="CC" Value="/bin/x86_64-linux-gnu-gcc"/>
      <Tool Name="CXX" Value="/bin/x86_64-linux-gnu-g++"/>
      <Tool Name="Debugger" Value="/bin/x86_64-linux-gnu-gdb"/>
      <Tool Name="LinkerName" Value="/bin/x86_64-linux-gnu-g++"/>
      <Tool Name="MAKE" Value="/bin/make -j4"/>
      <Tool Name="ResourceCompiler" Value="windres"/>
      <Tool Name="SharedObjectLinkerName" Value="/bin/x86_64-linux-gnu-g++ -shared -fPIC"/>
      <File Extension="c" CompilationLine="$(CC) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="c++" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cc" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cpp" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cxx" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="m" CompilationLine="$(CXX) -x objective-c $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="mm" CompilationLine="$(CXX) -x objective-c++ $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="rc" CompilationLine="$(RcCompilerName) -i &quot;$(FileFullPath)&quot; $(RcCmpOptions)   $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(RcIncludePath)" Kind="1"/>
      <File Extension="s" CompilationLine="$(AS) &quot;$(FileFullPath)&quot; $(ASFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) -I$(IncludePath)" Kind="0"/>
      <LinkLine ProjectType="Dynamic Library" Pattern="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Executable" Pattern="$(LinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(LinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Static Library" Pattern="$(AR) $(ArchiveOutputSwitch)$(OutputFile) $(Objects)" PatternWithFile="$(AR) $(ArchiveOutputSwitch)$(OutputFile) @$(ObjectsFileList)"/>
      <Option Name="ObjectSuffix" Value=".o"/>
      <Option Name="DependSuffix" Value=""/>
      <Option Name="PreprocessSuffix" Value=".i"/>
      <Pattern Name="Error" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]*)([:0-9]*)(: )((fatal error)|(error)|(undefined reference)|([\t ]*required from))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)(\(\.text\+[0-9a-fx]*\))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+)(:)</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">undefined reference to</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">\*\*\* \[[a-zA-Z\-_0-9 ]+\] (Error)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?[ \t]*(warning|required)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?( note)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?([ ]+instantiated)</Pattern>
      <Pattern Name="Warning" FileNameIndex="2" LineNumberIndex="4" ColumnIndex="-1">(In file included from *)([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?</Pattern>
      <GlobalIncludePath/>
      <GlobalLibPath/>
      <PathVariable/>
      <CompilerOption Name="-O">Optimize generated code. (for speed)</CompilerOption>
      <CompilerOption Name="-O0">Optimize for debugging</CompilerOption>
      <CompilerOption Name="-O1">Optimize more (for speed)</CompilerOption>
      <CompilerOption Name="-O2">Optimize even more (for speed)</CompilerOption>
      <CompilerOption Name="-O3">Optimize fully (for speed)</CompilerOption>
      <CompilerOption Name="-Os">Optimize generated code (for size)</CompilerOption>
      <CompilerOption Name="-W">Enable standard compiler warnings</CompilerOption>
      <CompilerOption Name="-Wall">Enable all compiler warnings</CompilerOption>
      <CompilerOption Name="-Wfatal-errors">Stop compiling after first error</CompilerOption>
      <CompilerOption Name="-Wmain">Warn if main() is not conformant</CompilerOption>
      <CompilerOption Name="-ansi">In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++</CompilerOption>
      <CompilerOption Name="-fexpensive-optimizations">Expensive optimizations</CompilerOption>
      <CompilerOption Name="-fopenmp">Enable OpenMP (compilation)</CompilerOption>
      <CompilerOption Name="-g">Produce debugging information</CompilerOption>
      <CompilerOption Name="-pedantic">Enable warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pedantic-errors">Treat as errors the warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pg">Profile code when executed</CompilerOption>
      <CompilerOption Name="-std=c++11">Enable C++11 features</CompilerOption>
      <CompilerOption Name="-std=c++14">Enable C++14 features</CompilerOption>
      <CompilerOption Name="-std=c++17">Enable C++17 features</CompilerOption>
      <CompilerOption Name="-std=c99">Enable ANSI C99 features</CompilerOption>
      <CompilerOption Name="-w">Inhibit all warning messages</CompilerOption>
      <LinkerOption Name="-fopenmp">Enable OpenMP (linkage)</LinkerOption>
      <LinkerOption Name="-mwindows">Prevent a useless terminal console appearing with MSWindows GUI programs</LinkerOption>
      <LinkerOption Name="-pg">Profile code when executed</LinkerOption>
      <LinkerOption Name="-s">Remove all symbol table and relocation information from the executable</LinkerOption>
    </Compiler>
    <Compiler Name="Cross GCC ( i686-w64-mingw32 )" GenerateDependenciesFiles="yes" ReadObjectsListFromFile="yes" ObjectNameIdenticalToFileName="no" CompilerFamily="GCC" IsDefault="no">
      <InstallationPath>
        <![CDATA[/usr/bin]]>
      </InstallationPath>
      <Switch Name="ArchiveOutput" Value=" "/>
      <Switch Name="Debug" Value="-g "/>
      <Switch Name="Include" Value="-I"/>
      <Switch Name="Library" Value="-l"/>
      <Switch Name="LibraryPath" Value="-L"/>
      <Switch Name="Object" Value="-o "/>
      <Switch Name="Output" Value="-o "/>
      <Switch Name="PreprocessOnly" Value="-E"/>
      <Switch Name="Preprocessor" Value="-D"/>
      <Switch Name="Source" Value="-c "/>
      <Tool Name="AR" Value="/usr/bin/i686-w64-mingw32-ar rcu"/>
      <Tool Name="AS" Value="/usr/bin/i686-w64-mingw32-as"/>
      <Tool Name="CC" Value="/usr/bin/i686-w64-mingw32-gcc"/>
      <Tool Name="CXX" Value="/usr/bin/i686-w64-mingw32-g++"/>
      <Tool Name="Debugger" Value="/usr/bin/i686-w64-mingw32-gdb"/>
      <Tool Name="LinkerName" Value="/usr/bin/i686-w64-mingw32-g++"/>
      <Tool Name="MAKE" Value="/usr/bin/make -j4"/>
      <Tool Name="MakeDirCommand" Value=""/>
      <Tool Name="ResourceCompiler" Value="/usr/bin/i686-w64-mingw32-windres"/>
      <Tool Name="SharedObjectLinkerName" Value="/usr/bin/i686-w64-mingw32-g++ -shared -fPIC"/>
      <File Extension="c" CompilationLine="$(CC) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="c++" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cc" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cpp" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cxx" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="m" CompilationLine="$(CXX) -x objective-c $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="mm" CompilationLine="$(CXX) -x objective-c++ $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="rc" CompilationLine="$(RcCompilerName) -i &quot;$(FileFullPath)&quot; $(RcCmpOptions)   $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(RcIncludePath)" Kind="1"/>
      <File Extension="s" CompilationLine="$(AS) &quot;$(FileFullPath)&quot; $(ASFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) -I$(IncludePath)" Kind="0"/>
      <LinkLine ProjectType="Dynamic Library" Pattern="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Executable" Pattern="$(LinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(LinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Static Library" Pattern="$(AR) $(ArchiveOutputSwitch)$(OutputFile) $(Objects)" PatternWithFile="$(AR) $(ArchiveOutputSwitch)$(OutputFile) @$(ObjectsFileList)"/>
      <Option Name="ObjectSuffix" Value=".o"/>
      <Option Name="DependSuffix" Value=".o.d"/>
      <Option Name="PreprocessSuffix" Value=".i"/>
      <Pattern Name="Error" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]*)([:0-9]*)(: )((fatal error)|(error)|(undefined reference)|([\t ]*required from))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)(\(\.text\+[0-9a-fx]*\))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+)(:)</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">undefined reference to</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">\*\*\* \[[a-zA-Z\-_0-9 ]+\] (Error)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?[ \t]*(warning|required)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?( note)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?([ ]+instantiated)</Pattern>
      <Pattern Name="Warning" FileNameIndex="2" LineNumberIndex="4" ColumnIndex="-1">(In file included from *)([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?</Pattern>
      <GlobalIncludePath/>
      <GlobalLibPath/>
      <PathVariable/>
      <CompilerOption Name="-O">Optimize generated code. (for speed)</CompilerOption>
      <CompilerOption Name="-O0">Optimize for debugging</CompilerOption>
      <CompilerOption Name="-O1">Optimize more (for speed)</CompilerOption>
      <CompilerOption Name="-O2">Optimize even more (for speed)</CompilerOption>
      <CompilerOption Name="-O3">Optimize fully (for speed)</CompilerOption>
      <CompilerOption Name="-Os">Optimize generated code (for size)</CompilerOption>
      <CompilerOption Name="-W">Enable standard compiler warnings</CompilerOption>
      <CompilerOption Name="-Wall">Enable all compiler warnings</CompilerOption>
      <CompilerOption Name="-Wfatal-errors">Stop compiling after first error</CompilerOption>
      <CompilerOption Name="-Wmain">Warn if main() is not conformant</CompilerOption>
      <CompilerOption Name="-ansi">In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++</CompilerOption>
      <CompilerOption Name="-fexpensive-optimizations">Expensive optimizations</CompilerOption>
      <CompilerOption Name="-fopenmp">Enable OpenMP (compilation)</CompilerOption>
      <CompilerOption Name="-g">Produce debugging information</CompilerOption>
      <CompilerOption Name="-pedantic">Enable warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pedantic-errors">Treat as errors the warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pg">Profile code when executed</CompilerOption>
      <CompilerOption Name="-std=c++11">Enable C++11 features</CompilerOption>
      <CompilerOption Name="-std=c++14">Enable C++14 features</CompilerOption>
      <CompilerOption Name="-std=c++17">Enable C++17 features</CompilerOption>
      <CompilerOption Name="-std=c99">Enable ANSI C99 features</CompilerOption>
      <CompilerOption Name="-w">Inhibit all warning messages</CompilerOption>
      <LinkerOption Name="-fopenmp">Enable OpenMP (linkage)</LinkerOption>
      <LinkerOption Name="-mwindows">Prevent a useless terminal console appearing with MSWindows GUI programs</LinkerOption>
      <LinkerOption Name="-pg">Profile code when executed</LinkerOption>
      <LinkerOption Name="-s">Remove all symbol table and relocation information from the executable</LinkerOption>
    </Compiler>
    <Compiler Name="Cross GCC ( i686-w64-mingw32 )" GenerateDependenciesFiles="yes" ReadObjectsListFromFile="yes" ObjectNameIdenticalToFileName="no" CompilerFamily="GCC" IsDefault="no">
      <InstallationPath>
        <![CDATA[/usr/bin]]>
      </InstallationPath>
      <Switch Name="ArchiveOutput" Value=" "/>
      <Switch Name="Debug" Value="-g "/>
      <Switch Name="Include" Value="-I"/>
      <Switch Name="Library" Value="-l"/>
      <Switch Name="LibraryPath" Value="-L"/>
      <Switch Name="Object" Value="-o "/>
      <Switch Name="Output" Value="-o "/>
      <Switch Name="PreprocessOnly" Value="-E"/>
      <Switch Name="Preprocessor" Value="-D"/>
      <Switch Name="Source" Value="-c "/>
      <Tool Name="AR" Value="/usr/bin/i686-w64-mingw32-ar rcu"/>
      <Tool Name="AS" Value="/usr/bin/i686-w64-mingw32-as"/>
      <Tool Name="CC" Value="/usr/bin/i686-w64-mingw32-gcc"/>
      <Tool Name="CXX" Value="/usr/bin/i686-w64-mingw32-g++"/>
      <Tool Name="Debugger" Value="/usr/bin/i686-w64-mingw32-gdb"/>
      <Tool Name="LinkerName" Value="/usr/bin/i686-w64-mingw32-g++"/>
      <Tool Name="MAKE" Value="/usr/bin/make -j4"/>
      <Tool Name="MakeDirCommand" Value=""/>
      <Tool Name="ResourceCompiler" Value="/usr/bin/i686-w64-mingw32-windres"/>
      <Tool Name="SharedObjectLinkerName" Value="/usr/bin/i686-w64-mingw32-g++ -shared -fPIC"/>
      <File Extension="c" CompilationLine="$(CC) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="c++" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cc" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cpp" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cxx" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="m" CompilationLine="$(CXX) -x objective-c $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="mm" CompilationLine="$(CXX) -x objective-c++ $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="rc" CompilationLine="$(RcCompilerName) -i &quot;$(FileFullPath)&quot; $(RcCmpOptions)   $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(RcIncludePath)" Kind="1"/>
      <File Extension="s" CompilationLine="$(AS) &quot;$(FileFullPath)&quot; $(ASFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) -I$(IncludePath)" Kind="0"/>
      <LinkLine ProjectType="Dynamic Library" Pattern="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Executable" Pattern="$(LinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(LinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Static Library" Pattern="$(AR) $(ArchiveOutputSwitch)$(OutputFile) $(Objects)" PatternWithFile="$(AR) $(ArchiveOutputSwitch)$(OutputFile) @$(ObjectsFileList)"/>
      <Option Name="ObjectSuffix" Value=".o"/>
      <Option Name="DependSuffix" Value=".o.d"/>
      <Option Name="PreprocessSuffix" Value=".i"/>
      <Pattern Name="Error" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]*)([:0-9]*)(: )((fatal error)|(error)|(undefined reference)|([\t ]*required from))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)(\(\.text\+[0-9a-fx]*\))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+)(:)</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">undefined reference to</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">\*\*\* \[[a-zA-Z\-_0-9 ]+\] (Error)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?[ \t]*(warning|required)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?( note)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?([ ]+instantiated)</Pattern>
      <Pattern Name="Warning" FileNameIndex="2" LineNumberIndex="4" ColumnIndex="-1">(In file included from *)([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?</Pattern>
      <GlobalIncludePath/>
      <GlobalLibPath/>
      <PathVariable/>
      <CompilerOption Name="-O">Optimize generated code. (for speed)</CompilerOption>
      <CompilerOption Name="-O0">Optimize for debugging</CompilerOption>
      <CompilerOption Name="-O1">Optimize more (for speed)</CompilerOption>
      <CompilerOption Name="-O2">Optimize even more (for speed)</CompilerOption>
      <CompilerOption Name="-O3">Optimize fully (for speed)</CompilerOption>
      <CompilerOption Name="-Os">Optimize generated code (for size)</CompilerOption>
      <CompilerOption Name="-W">Enable standard compiler warnings</CompilerOption>
      <CompilerOption Name="-Wall">Enable all compiler warnings</CompilerOption>
      <CompilerOption Name="-Wfatal-errors">Stop compiling after first error</CompilerOption>
      <CompilerOption Name="-Wmain">Warn if main() is not conformant</CompilerOption>
      <CompilerOption Name="-ansi">In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++</CompilerOption>
      <CompilerOption Name="-fexpensive-optimizations">Expensive optimizations</CompilerOption>
      <CompilerOption Name="-fopenmp">Enable OpenMP (compilation)</CompilerOption>
      <CompilerOption Name="-g">Produce debugging information</CompilerOption>
      <CompilerOption Name="-pedantic">Enable warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pedantic-errors">Treat as errors the warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pg">Profile code when executed</CompilerOption>
      <CompilerOption Name="-std=c++11">Enable C++11 features</CompilerOption>
      <CompilerOption Name="-std=c++14">Enable C++14 features</CompilerOption>
      <CompilerOption Name="-std=c++17">Enable C++17 features</CompilerOption>
      <CompilerOption Name="-std=c99">Enable ANSI C99 features</CompilerOption>
      <CompilerOption Name="-w">Inhibit all warning messages</CompilerOption>
      <LinkerOption Name="-fopenmp">Enable OpenMP (linkage)</LinkerOption>
      <LinkerOption Name="-mwindows">Prevent a useless terminal console appearing with MSWindows GUI programs</LinkerOption>
      <LinkerOption Name="-pg">Profile code when executed</LinkerOption>
      <LinkerOption Name="-s">Remove all symbol table and relocation information from the executable</LinkerOption>
    </Compiler>
    <Compiler Name="Cross MinGW (x64)" GenerateDependenciesFiles="yes" ReadObjectsListFromFile="yes" ObjectNameIdenticalToFileName="no" CompilerFamily="GCC" IsDefault="no">
      <InstallationPath>
        <![CDATA[/usr/bin]]>
      </InstallationPath>
      <Switch Name="ArchiveOutput" Value=" "/>
      <Switch Name="Debug" Value="-g "/>
      <Switch Name="Include" Value="-I"/>
      <Switch Name="Library" Value="-l"/>
      <Switch Name="LibraryPath" Value="-L"/>
      <Switch Name="Object" Value="-o "/>
      <Switch Name="Output" Value="-o "/>
      <Switch Name="PreprocessOnly" Value="-E"/>
      <Switch Name="Preprocessor" Value="-D"/>
      <Switch Name="Source" Value="-c "/>
      <Tool Name="AR" Value="/usr/bin/x86_64-w64-mingw32-ar rcu"/>
      <Tool Name="AS" Value="/usr/bin/x86_64-w64-mingw32-as"/>
      <Tool Name="CC" Value="/usr/bin/x86_64-w64-mingw32-gcc"/>
      <Tool Name="CXX" Value="/usr/bin/x86_64-w64-mingw32-g++"/>
      <Tool Name="Debugger" Value="/usr/bin/x86_64-w64-mingw32-gdb"/>
      <Tool Name="LinkerName" Value="/usr/bin/x86_64-w64-mingw32-g++"/>
      <Tool Name="MAKE" Value="/usr/bin/make -j2"/>
      <Tool Name="MakeDirCommand" Value=""/>
      <Tool Name="ResourceCompiler" Value="/usr/bin/x86_64-w64-mingw32-windres"/>
      <Tool Name="SharedObjectLinkerName" Value="/usr/bin/x86_64-w64-mingw32-g++ -shared -fPIC"/>
      <File Extension="c" CompilationLine="$(CC) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="c++" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cc" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cpp" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cxx" CompilationLine="$(CXX) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="m" CompilationLine="$(CXX) -x objective-c $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="mm" CompilationLine="$(CXX) -x objective-c++ $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CXXFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="rc" CompilationLine="$(RcCompilerName) -i &quot;$(FileFullPath)&quot; $(RcCmpOptions)   $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(RcIncludePath)" Kind="1"/>
      <File Extension="s" CompilationLine="$(AS) &quot;$(FileFullPath)&quot; $(ASFLAGS) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) -I$(IncludePath)" Kind="0"/>
      <LinkLine ProjectType="Dynamic Library" Pattern="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(SharedObjectLinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Executable" Pattern="$(LinkerName) $(OutputSwitch)$(OutputFile) $(Objects) $(LibPath) $(Libs) $(LinkOptions)" PatternWithFile="$(LinkerName) $(OutputSwitch)$(OutputFile) @$(ObjectsFileList) $(LibPath) $(Libs) $(LinkOptions)"/>
      <LinkLine ProjectType="Static Library" Pattern="$(AR) $(ArchiveOutputSwitch)$(OutputFile) $(Objects)" PatternWithFile="$(AR) $(ArchiveOutputSwitch)$(OutputFile) @$(ObjectsFileList)"/>
      <Option Name="ObjectSuffix" Value=".o"/>
      <Option Name="DependSuffix" Value=".o.d"/>
      <Option Name="PreprocessSuffix" Value=".i"/>
      <Pattern Name="Error" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]*)([:0-9]*)(: )((fatal error)|(error)|(undefined reference)|([\t ]*required from))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)(\(\.text\+[0-9a-fx]*\))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1" ColumnIndex="-1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+)(:)</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">undefined reference to</Pattern>
      <Pattern Name="Error" FileNameIndex="-1" LineNumberIndex="-1" ColumnIndex="-1">\*\*\* \[[a-zA-Z\-_0-9 ]+\] (Error)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="4">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?[ \t]*(warning|required)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?( note)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3" ColumnIndex="-1">([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?([ ]+instantiated)</Pattern>
      <Pattern Name="Warning" FileNameIndex="2" LineNumberIndex="4" ColumnIndex="-1">(In file included from *)([a-zA-Z:]{0,2}[ a-zA-Z\.0-9_/\+\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?</Pattern>
      <GlobalIncludePath/>
      <GlobalLibPath/>
      <PathVariable/>
      <CompilerOption Name="-O">Optimize generated code. (for speed)</CompilerOption>
      <CompilerOption Name="-O0">Optimize for debugging</CompilerOption>
      <CompilerOption Name="-O1">Optimize more (for speed)</CompilerOption>
      <CompilerOption Name="-O2">Optimize even more (for speed)</CompilerOption>
      <CompilerOption Name="-O3">Optimize fully (for speed)</CompilerOption>
      <CompilerOption Name="-Os">Optimize generated code (for size)</CompilerOption>
      <CompilerOption Name="-W">Enable standard compiler warnings</CompilerOption>
      <CompilerOption Name="-Wall">Enable all compiler warnings</CompilerOption>
      <CompilerOption Name="-Wfatal-errors">Stop compiling after first error</CompilerOption>
      <CompilerOption Name="-Wmain">Warn if main() is not conformant</CompilerOption>
      <CompilerOption Name="-ansi">In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++</CompilerOption>
      <CompilerOption Name="-fexpensive-optimizations">Expensive optimizations</CompilerOption>
      <CompilerOption Name="-fopenmp">Enable OpenMP (compilation)</CompilerOption>
      <CompilerOption Name="-g">Produce debugging information</CompilerOption>
      <CompilerOption Name="-pedantic">Enable warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pedantic-errors">Treat as errors the warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pg">Profile code when executed</CompilerOption>
      <CompilerOption Name="-std=c++11">Enable C++11 features</CompilerOption>
      <CompilerOption Name="-std=c++14">Enable C++14 features</CompilerOption>
      <CompilerOption Name="-std=c++17">Enable C++17 features</CompilerOption>
      <CompilerOption Name="-std=c99">Enable ANSI C99 features</CompilerOption>
      <CompilerOption Name="-w">Inhibit all warning messages</CompilerOption>
      <LinkerOption Name="-fopenmp">Enable OpenMP (linkage)</LinkerOption>
      <LinkerOption Name="-mwindows">Prevent a useless terminal console appearing with MSWindows GUI programs</LinkerOption>
      <LinkerOption Name="-pg">Profile code when executed</LinkerOption>
      <LinkerOption Name="-s">Remove all symbol table and relocation information from the executable</LinkerOption>
    </Compiler>
  </Compilers>
  <BuildSystem Name="GNU makefile for g++/gcc" ToolPath="make" Options="-f" Jobs="2" Active="yes"/>
  <BuildSystem Name="CMake" ToolPath="" Options="" Jobs="" Active="no"/>
  <BuildSystem Name="CodeLite Make Generator" ToolPath="" Options="" Jobs="" Active="no"/>
  <BuildSystem Name="Default" ToolPath="" Options="" Jobs="" Active="yes"/>
  <BuildSystem Name="GNU makefile onestep build" ToolPath="" Options="" Jobs="" Active="no"/>
</BuildSettings>
